{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts",
    "result": {"pageContext":{"currentCategory":"All","edges":[{"node":{"id":"82fc39eb-2211-5130-9375-04020316b2ab","excerpt":"정규표현식이란? ✅ 정규식 (Regular Expression) 문자열에서 특정 문자 조합을 찾기 위한 패턴이다. JavaScript에서는 정규 표현식도 객체로서, 의 와  메서드를 사용할 수 있다. 역할 문자 검색 (search) 문자 대체 (replace) 문자 추출 (extract) 📌 테스트 사이트:https://regexr.com/ 자바스크립트 정규식 생성 1. 생성자 함수 방식 2. 리터럴(Literal) 방식 메소드 메소드 문법 설명 test  일치 여부(Boolean) 반환 match  일치하는 문자의 배열 (Array) 반환 replace  일치하는 문자를 대체 플래그(옵션) 플래그 설명 g 문자열 전체에서 일치하는 모든 문자 (global) i 영어 대소문자 구분 없이 일치 (ignore case) m 여러 줄로 간주하여 탐색 (multi line) 패턴(표현) 패턴 설명 ^ab 줄(Line) 시작에 있는 ab와 일치 ab$ 줄(Line) 끝에 있는 ab와 일치 …","fields":{"slug":"/regexp-basics/"},"frontmatter":{"categories":"Basics JavaScript","title":"정규표현식 개념과 문법","date":"December 30, 2021"}},"next":{"fields":{"slug":"/SaSS-concept/"}},"previous":null},{"node":{"id":"e6c1e061-db5c-5e94-a98b-148427505819","excerpt":"📌 Syntactically Awesome StyleSheets! 대규모 스타일시트를 잘 구조화하여 사용할 수 있도록 효율셩을 향상시켜준다. 1. CSS / Sass(Scss) 🤔 CSS 코드가 한 파일로 제작된다면? 가독성 저하: 어디서부터 어디까지 어떤 스타일을 담당하고 있는지 파악하기 어려움 (네스팅 불가) 중복 코드 혹은 레거시 코드를 생성하기 쉬움 단순 수정에도 전체 코드를 일일히 확인해야 함 프로젝트가 커질수록 단순 CSS로는 작업하는 속도가 느려짐 즉, Sass(Scss) 개발은 선택이 아닌 필수가 되어가고 있음 2. Sass(Scss) 7-1 패턴 💡 파일명에 가 붙는 경우 되어 사용될 것으로 파악   변수, 함수, 믹스인 등 추상화되어야 할 것들  전체 스타일 중 기본이 되는 것들  버튼, 드롭다운, 인풋 등 독립된 요소로 제어할 수 있는 것들  컴포넌트보다 큰 개념으로, 보다 넓은 섹션 (헤더, 푸터, 네비게이터 등)  한 사이트를 구성하는 각 페이지  다크, 라…","fields":{"slug":"/SaSS-concept/"},"frontmatter":{"categories":"Basics HTML/CSS","title":"\\[CSS]\\ SaSS 기본과 필요성 (CSS와의 차이)","date":"December 29, 2021"}},"next":{"fields":{"slug":"/css-properties-4/"}},"previous":{"fields":{"slug":"/regexp-basics/"}}},{"node":{"id":"858a039f-de02-53c6-b771-bc6155440481","excerpt":"1.  요소의 전환(시작과 끝) 효과를 지정하는 단축 속성 가상 선택자가 아닌 요소 원본을 제어하는 CSS 부분에 명시해주어야 함! ✅ 개별 속성 : 속성명 기본값: , 해당 요소의 모든 속성에 적용 속성이름을 명시하여 전환 효과를 사용할 속성 이름을 따로 명시할 수 있음 (ex. 다른 속성은 모두 제외하고 요소의 가로 너비에만 전환 효과가 들어갔으면 좋겠어!) : 타이밍함수 기본값: , 느리게-빠르게-느리게 , , ,  등  값을 사용하여 직접 제어할 수도 있음 (어려움) 📌 CSS easing functions cheat sheet, easing functions mdn📌 Tweenmax easing - greensock.com : 대기시간 기본값:  2.  요소의 변환 효과 ✅ 2차원 변환 함수 , ,  X축 또는 Y축 이동 px등의 단위를 사용해 값 입력  X축 및 Y축 방향 크기 제어 : 회전 , : X축 또는 Y축 기울임 ✅ 3차원 변환 함수 ,  X축 또는 Y축 회전 …","fields":{"slug":"/css-properties-4/"},"frontmatter":{"categories":"Basics HTML/CSS","title":"\\[CSS]\\ CSS 속성(4) \"트랜지션\"","date":"December 28, 2021"}},"next":{"fields":{"slug":"/css-properties-3/"}},"previous":{"fields":{"slug":"/SaSS-concept/"}}},{"node":{"id":"ac18bdee-0bf4-5e52-a553-48aec2b795a4","excerpt":"1. 플렉스(정렬) 컨테이너 1차원 레이아웃에서 수직 정렬을 수평 정렬로 전환 이 때 가 부여된 부모 요소를 플렉스 컨테이너라고 할 수 있다. 해당 컨테이너 안에서 수평으로 정렬되는 자식(하위) 요소들을 플렉스 아이템이라고 할 수 있다. 플렉스 컨테이너와 아이템 각각에 부여할 수 있는 속성이 일부 다르다. ✅ 플렉스 컨테이너 사용가능 속성  플렉스 컨테이너 (flex container)의 화면 출력 특성 : 블록 요소와 같이 flex container 정의 아이템 요소 중 최대 높이에 맞추어 높이는 줄어들지만, 뷰포트 너비에 맞추어 컨테이너 너비는 최대한으로 늘어남 : 인라인 요소와 같이 flex container 정의 컨테이너의 높이와 너비 모두 아이템 요소들에 맞추어 최대한 줄어들게 됨  : 행(수평)을 축으로 정렬 (=수평 정렬), 왼쪽에서 오른쪽 : 오른쪽에서 왼쪽으로 수평 정렬 , 를 통해 수직 정렬도 가능하지만, 요소 간 정렬의 기본값이 수직 정렬이므로 굳이 설정해야 하…","fields":{"slug":"/css-properties-3/"},"frontmatter":{"categories":"Basics HTML/CSS","title":"\\[CSS]\\ CSS 속성(3) \"플렉스\"","date":"December 27, 2021"}},"next":{"fields":{"slug":"/css-properties-2/"}},"previous":{"fields":{"slug":"/css-properties-4/"}}},{"node":{"id":"67e427e2-32ef-5961-bfdb-73d22eb23059","excerpt":"1. 문자 제어  기본값: rgb(0,0,0) 기타 지정 가능한 색상  기본값: 왼쪽 정렬 () 오른쪽 정렬(), 가운데 정렬() 가능  기본값:   태그의 경우, 기본적으로  값을 가지고 있음 밑줄 , 중앙(취소)선  등  들여쓰기(양수) 및 내어쓰기(음수) 기본값:  2. 배경 제어  해당 요소의 배경 색상 지정  이미지를 삽입하는 것이 아니라, 배경에 이미지를 깔게 되므로, 요소의 크기 이상으로 배경 이미지가 드러날 수 없음.  앞선 문제(요소의 크기 이상으로는 배경 출력이 불가)를 해결하기 위해, 요소의 크기에 맞게 배경 이미지의 크기를 제어할 수 있음  이미지가 요소보다 작을 경우, 반복되어 요소의 크기만큼 채울지 여부를 제어할 수 있음 기본값 : 이미지를 수직, 수평 반복 : 수평으로만 반복 : 수직으로만 반복 : 반복하지 않음  요소의 배경 이미지 위치 , , , ,  등 방향 또는 px, em, rem 등 단위로 지정  기본값: , 이미지의 실제 크기 px, em, …","fields":{"slug":"/css-properties-2/"},"frontmatter":{"categories":"Basics HTML/CSS","title":"\\[CSS]\\ CSS 속성(2)","date":"December 26, 2021"}},"next":{"fields":{"slug":"/css-properties-1/"}},"previous":{"fields":{"slug":"/css-properties-3/"}}},{"node":{"id":"14c08c31-aca7-5c23-b5c2-b4273645a9bb","excerpt":"🙌 박스 모델, 글꼴, 문자, 배경, 배치, 플렉스(정렬), 전환, 변환, 띄움, 애니메이션, 그리드, 다단, 필터 등 속성 정리! 💡 코드로 작성되어 있는 속성을 보고 머릿속으로 어떻게 그려질 지 생각해보는 연습이 중요하다. 1. ,  기본값:  요소에 이미 들어있는 속성의 값 ㅡ 브라우저가 자동으로 요소의 너비를 계산 px, em, vw 등 단위로 지정 와 같은 블록 요소의 경우: : 부모 요소의 크기만큼 자동으로 늘어남 : 포함한 콘텐츠 크기만큼 자동으로 줄어듦 과 같은 블록 요소의 경우: : 포함한 콘텐츠 크기만큼 자동으로 줄어듦 : 포함한 콘텐츠 크기만큼 자동으로 줄어듦 ,  기본값:  px, em, vw 등 단위로 지정 ,  기본값:  px, em, vw 등 단위로 지정 위와 같이 자식 요소의 가 부모 요소의 보다 긴 경우, 부모 요소를 넘어 길어질 수 있다. (도 당연히 마찬가지) 2. ,  : 요소의 외부 여백(공간)을 지정하는 단축 속성 기본값:   지정 가능 세로…","fields":{"slug":"/css-properties-1/"},"frontmatter":{"categories":"Basics HTML/CSS","title":"\\[CSS]\\ CSS 속성","date":"December 23, 2021"}},"next":{"fields":{"slug":"/css-basics/"}},"previous":{"fields":{"slug":"/css-properties-2/"}}},{"node":{"id":"afd5423a-e175-53d8-8af5-33a34f67b4ee","excerpt":"1. 선택자{속성: 값;} 선택자: 스타일(CSS)를 적용할 대상 2. CSS 선언 방식 내장 방식: 의 내용으로 스타일을 작성하는 방식 인라인 방식: 요소의  속성에 직접 스타일을 작성하는 방식 (ex.  링크 방식: 로 외부 CSS 문서를 가져와서 연결하는 방식 (병렬 연결)  방식: CSS의  규칙으로 CSS 문서 안에서 또 다른 CSS 문서를 가져와 연결하는 방식 (ex.   ) 직렬 연결: 된 CSS는 가 작성된 해당 CSS가 HTML에 연결되기 전이나,  줄이 해석되기 전까지는 문서에 적용되지 않음 즉 적용이 지연되는데, 장점일수도 단점일수도 있음. 3. CSS 선택자 ✅ 기본 선택자 (애스터리스크): 기본, 전체 선택자. 모든 요소를 선택 단독으로는 쓸 일이 잘 없고, 복합 선택자를 통해 어떤 범위 안에 있는 모든 요소를 선택할 때 쓰일 수 있음. : 기본, 태그 선택자. 태그 이름이 ABC인 요소를 선택. (ex. ) : 기본, 클래스 선택자. HTML 클래스 속성의…","fields":{"slug":"/css-basics/"},"frontmatter":{"categories":"Basics HTML/CSS","title":"\\[CSS]\\ CSS 기본 문법 (+ HTML 전역 속성)","date":"December 22, 2021"}},"next":{"fields":{"slug":"/html-basics/"}},"previous":{"fields":{"slug":"/css-properties-1/"}}},{"node":{"id":"88d6e98c-3078-54ec-af14-07a09dc54bd3","excerpt":"1. 부모와 자식 요소 상위(조상), 하위(후손)요소는 각각 부모와 자식 요소를 포함하게 됨. 단 부모와 자식 요소는 바로 윗 요소 / 바로 아랫 요소  2. 글자와 상자 ✅ 글자 - 인라인()요소 요소가 수평으로 쌓임 (자체 높이나 넓이를 가지지 않고, 최대한 줄어들려고 함) 포함한 콘텐츠 크기만큼 자동으로 줄어들려고 함 가로세로 사이즈를 가질 수 없음 CSS로도 지정할 수 없음 여백의 경우 좌우는 가능하지만 상하 여백은 불가 하위 요소로 블록 요소를 가질 수 없음 ✅ 상자 - 블록(Block) 요소 요소가 수직으로 쌓임: 가로는 부모 요소의 크기만큼 자동으로 늘어남, 세로는 포함한 콘텐츠 크기만큼 자동으로 줄어들려고 함 단, 가로세로 사이즈를 CSS로 설정해 줌으로서 크기를 지정할 수 있음 하위 요소로 블록과 인라인 요소 모두 가질 수 있음 3. HTML 핵심 요소 정리 ✅ 블록 요소  : 특별한 의미가 없는 구분을 위한 요소  ~ : 제목  :  너무 커서 저는 잘 쓰지 않습…","fields":{"slug":"/html-basics/"},"frontmatter":{"categories":"Basics HTML/CSS","title":"\\[HTML]\\ HTML 기본 개념과 태그","date":"December 21, 2021"}},"next":null,"previous":{"fields":{"slug":"/css-basics/"}}}],"categories":["All","Basics","JavaScript","HTML/CSS"]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}